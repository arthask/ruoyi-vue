<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.UserWordMapper">
    
    <resultMap type="UserWord" id="UserWordResult">
        <result property="id"    column="id"    />
        <result property="wordId"    column="word_id"    />
        <result property="word"    column="word"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="period"    column="period"    />
        <result property="collectFlag"    column="collect_flag"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="nextStudyTime"    column="next_study_time"    />
    </resultMap>

    <sql id="selectUserWordVo">
        select id, word_id, word, user_id, user_name, period, collect_flag, create_time, update_time, next_study_time from user_word
    </sql>

    <select id="selectUserWordList" parameterType="UserWord" resultMap="UserWordResult">
        <include refid="selectUserWordVo"/>
        <where>  
            <if test="wordId != null "> and word_id = #{wordId}</if>
            <if test="word != null  and word != ''"> and word = #{word}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="period != null "> and period = #{period}</if>
            <if test="collectFlag != null  and collectFlag != ''"> and collect_flag = #{collectFlag}</if>
            <if test="nextStudyTime != null "> and next_study_time = #{nextStudyTime}</if>
        </where>
    </select>
    
    <select id="selectUserWordById" parameterType="Long" resultMap="UserWordResult">
        <include refid="selectUserWordVo"/>
        where id = #{id}
    </select>
    <select id="getWordCount" resultType="java.lang.Long">
        select count(*) from user_word where user_id = #{userId}
    </select>
    <select id="getUserWordPeriodCount" resultType="com.ruoyi.system.domain.vo.UserWordPeriodVo">
        select period ,count(*) as value from user_word uw where user_id = #{userId} group by period;
    </select>
    <select id="findByWordWord" resultType="com.ruoyi.system.domain.UserWord">
        <include refid="selectUserWordVo"/>
        where word = #{word}
    </select>

    <select id="getReviewWordId" resultType="java.lang.Long">
        select word_id  from user_word uw
        where uw.next_study_time  <![CDATA[<=]]> #{timeStr}
        and uw.period <![CDATA[<=]]> 8
        and uw.user_id = #{userId}
        order by next_study_time ASC
            limit 1;
    </select>

    <select id="getUserWordOfMonth" resultType="java.lang.Long">
        select count(*) from user_word
        where create_time >= #{beginStr} and create_time <![CDATA[<=]]> #{endStr}
        and user_id = #{userId}
        group by date_format(create_time,"%Y%m")
    </select>

    <select id="getExceptValueOfDay" resultType="Map">
        select date_format(next_study_time,"%Y%m%d") as day, count(*) as count
        from user_word
        where next_study_time >= #{beginStr} and next_study_time <![CDATA[<=]]> #{endStr}
        and user_id = #{userId}
        group by date_format(next_study_time,"%Y%m%d")
    </select>

    <select id="getNeedReviewNumOfDay" resultType="java.lang.Long">
        select
            count(*) as count
        from user_word
        where next_study_time >= #{beginStr}
            and next_study_time <![CDATA[<=]]> #{endStr}
            and user_id = #{userId}
    </select>

    <select id="getHaveReviewNumOfDay" resultType="java.lang.Long">
        select count(distinct uw.word_id) from user_word uw
        left join user_study_record usr
        on uw.word_id = usr.word_id
        where uw.user_id = #{userId}
        and uw.next_study_time > #{endStr}
        and usr.study_time  >= #{beginStr} and usr.study_time <![CDATA[<=]]> #{endStr}
    </select>

    <select id="getReviewWordByIndex" resultType="com.ruoyi.system.domain.Word">
        select w.*  from word_snapshot ws
            left join word w on ws.word_id = w.id
        where
            ws.user_id = #{userId}
            and type = 0
            limit #{offset},1;
    </select>

    <select id="getTotalReviewNum" resultType="java.lang.Long">
        select count(*) from word_snapshot ws
        where
            ws.user_id = #{userId}
            and type = 0
    </select>

    <select id="getNeedReviewWords" resultType="com.ruoyi.system.domain.Word">
        select w.* from user_word uw
                                 left join word w on uw.word_id = w.id
        where uw.next_study_time  <![CDATA[<=]]> #{timeStr}
          and uw.period <![CDATA[<=]]> 8
          and uw.user_id = #{userId}
    </select>


    <insert id="insertUserWord" parameterType="UserWord" useGeneratedKeys="true" keyProperty="id">
        insert into user_word
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="wordId != null">word_id,</if>
            <if test="word != null and word != ''">word,</if>
            <if test="userId != null">user_id,</if>
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="period != null">period,</if>
            <if test="collectFlag != null and collectFlag != ''">collect_flag,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="nextStudyTime != null">next_study_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="wordId != null">#{wordId},</if>
            <if test="word != null and word != ''">#{word},</if>
            <if test="userId != null">#{userId},</if>
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="period != null">#{period},</if>
            <if test="collectFlag != null and collectFlag != ''">#{collectFlag},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="nextStudyTime != null">#{nextStudyTime},</if>
         </trim>
    </insert>

    <update id="updateUserWord" parameterType="UserWord">
        update user_word
        <trim prefix="SET" suffixOverrides=",">
            <if test="wordId != null">word_id = #{wordId},</if>
            <if test="word != null and word != ''">word = #{word},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="period != null">period = #{period},</if>
            <if test="collectFlag != null and collectFlag != ''">collect_flag = #{collectFlag},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="nextStudyTime != null">next_study_time = #{nextStudyTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserWordById" parameterType="Long">
        delete from user_word where id = #{id}
    </delete>

    <delete id="deleteUserWordByIds" parameterType="String">
        delete from user_word where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>